#include<bits/stdc++.h>
using namespace std;
using namespace std::chrono;
const int M = 1e9+7;

// #include <ext/pb_ds/assoc_container.hpp> // Common file
// #include <ext/pb_ds/tree_policy.hpp>
// #include <ext/pb_ds/detail/standard_policies.hpp>
// using namespace __gnu_pbds;
// typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key

#define lld long double
#define ll long long
typedef unsigned long long ull;


ll pow(ll a,ll b,ll m = M) {a %= m;ll res = 1;while (b>0) {if(b&1)res = res * a % m;a = a * a % m;b >>= 1;}return res;}
ll mod_add(ll a,ll b,ll m = M) {a%=m,b%=m; return (a+b)%m;}
ll mod_sub(ll a,ll b,ll m = M) {a%=m,b%=m; return (a-b+m)%m;}
ll mod_mul(ll a,ll b,ll m = M) {a%=m,b%=m; return (a*1ll*b)%m;}
ll mod_div(ll a,ll b,ll m = M) {a%=m,b%=m; ll binv = pow(b,m-2,m); return mod_mul(a,binv,m);}

#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif

void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(ull t) {cerr << t;}

template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.first); cerr << ","; _print(p.second); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
// void _print(pbds v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}




int main()
{
#ifndef ONLINE_JUDGE
	freopen("Error.txt","w",stderr);
#endif
   ios_base::sync_with_stdio(false);
   cin.tie(0);
   ll t = 1;
   cin>>t;
   while(t--){

   }
   
   cout<<1;
}
